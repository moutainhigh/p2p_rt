<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rbao.east.mapper.BorrowRepossessedMapper" >
  <resultMap id="BaseResultMap" type="com.rbao.east.entity.BorrowRepossessed" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="repossessed_status" property="repossessedStatus" jdbcType="INTEGER" />
    <result column="repossessed_sequence" property="repossessedSequence" jdbcType="INTEGER" />
    <result column="tender_id" property="tenderId" jdbcType="INTEGER" />
    <result column="prepare_datetime" property="prepareDatetime" jdbcType="TIMESTAMP" />
    <result column="paid_datetime" property="paidDatetime" jdbcType="TIMESTAMP" />
    <result column="prepare_amount" property="prepareAmount" jdbcType="DECIMAL" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="repossessed_interest" property="repossessedInterest" jdbcType="DECIMAL" />
    <result column="repossessed_capital" property="repossessedCapital" jdbcType="DECIMAL" />
    <result column="late_days" property="lateDays" jdbcType="INTEGER" />
    <result column="repayment_id" property="repaymentId" jdbcType="INTEGER" />
    <result column="current_period" property="currentPeriod"
			jdbcType="INTEGER" />
		<result column="total_period" property="totalPeriod"
			jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="deduct_interest_fee" property="deductInterestFee" jdbcType="DECIMAL" />
    <result column="deduct_late_interest_fee" property="deductLateInterestFee" jdbcType="DECIMAL" />
    <result column="late_interest" property="lateInterest" jdbcType="DECIMAL" />
    <result column="repossessed_addtime" property="repossessedAddtime" jdbcType="INTEGER" />
    <result column="repossessed_addip" property="repossessedAddip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, repossessed_status, repossessed_sequence, tender_id, prepare_datetime, paid_datetime, 
    prepare_amount, paid_amount, repossessed_interest, repossessed_capital, late_days,total_period,current_period,
    late_interest, repossessed_addtime, repossessed_addip,repayment_id,user_id,deduct_interest_fee,deduct_late_interest_fee
  </sql>
  
  <!-- 待收总额 -->
  <select id="selectCountMoney" resultType="BigDecimal" parameterType="Map">
  SELECT SUM(prepare_amount) FROM rb_borrow_repossessed WHERE 1=1
  <if test="repossessedStatus != null">
  and repossessed_status = #{repossessedStatus}
  </if>
  </select>
  <!-- 我是投资者-收款明细账 -->
  <select id="selectRepByStatus" parameterType="Map" resultType="Map">
  SELECT
  		b.id bId, 
  		b.annual_interest_rate annuaInterestRate,
  		br.repossessed_status repossessedStatus,
  		b.repayment_style repaymentStyle,
		br.tender_id tenderId,
		br.current_period currentPeriod,
		br.total_period totalPeriod,
		br.prepare_datetime prepareDatetime,
		br.paid_datetime paidDatetime,
		br.prepare_amount prepareAmount,
		br.paid_amount paidAmount,
		br.repossessed_interest repossessedInterest,
		br.repossessed_capital repossessedCapital,
		br.late_days lateDays,
		br.late_interest lateInterest,
		br.repayment_id repaymentId,
		b.borrow_title borrowTitle,
		u.user_account userAccount,
		bt.agreement_path agreementPath
	FROM rb_borrow_repossessed br INNER JOIN rb_borrow_tender bt ON br.tender_id = bt.id 
	INNER JOIN rb_borrow b ON bt.borrow_id = b.id INNER JOIN rb_user u ON u.id = b.user_id 
	WHERE 1=1 
	<if test="repossessedStatus != null and repossessedStatus != ''">
	AND br.repossessed_status = #{repossessedStatus}
	</if>
	<if test="userId != null and userId != ''">
	AND br.user_id = #{userId}
	</if>
	<if test="beginTime !=null and beginTime !=''">
    <![CDATA[	and DATE_FORMAT(br.prepare_datetime,'%Y-%m-%d') >=  #{beginTime }  ]]>
	</if>
	<if test="endTime !=null and endTime !=''">
    <![CDATA[	and DATE_FORMAT(br.prepare_datetime,'%Y-%m-%d') <=  #{endTime }  ]]>
	</if>
	ORDER BY br.repossessed_status,br.prepare_datetime DESC
  </select>
  
  <select id="countRepByStatus" parameterType="Map" resultType="int">
  SELECT count(*)
	FROM rb_borrow_repossessed br INNER JOIN rb_borrow_tender bt ON br.tender_id = bt.id 
	INNER JOIN rb_borrow b ON bt.borrow_id = b.id INNER JOIN rb_user u ON u.id = b.user_id 
	WHERE 1=1 
	<if test="repossessedStatus != null and repossessedStatus != ''">
	AND br.repossessed_status = #{repossessedStatus}
	</if>
	<if test="userId != null and userId != ''">
	AND br.user_id = #{userId}
	</if>
	<if test="beginTime !=null and beginTime !=''">
    <![CDATA[	and DATE_FORMAT(br.prepare_datetime,'%Y-%m-%d') >=  #{beginTime }  ]]>
	</if>
	<if test="endTime !=null and endTime !=''">
    <![CDATA[	and DATE_FORMAT(br.prepare_datetime,'%Y-%m-%d') <=  #{endTime }  ]]>
	</if>
  </select>
  
  <!-- 最近待收 -->
  <select id="selectWait" resultMap="BaseResultMap" parameterType="Map">
  	SELECT 
	  br.id id, 
	  br.repossessed_status repossessedStatus,
	  br.repossessed_sequence repossessedSequence,
	  br.tender_id tenderId,
	  br.current_period currentPeriod,
	  br.total_period totalPeriod,
	  br.prepare_datetime prepareDatetime,
	  br.paid_datetime paidDatetime,
	  br.prepare_amount prepareAmount,
	  br.paid_amount paidAmount,
	  br.repossessed_interest repossessedInterest,
	  br.repossessed_capital repossessedCapital,
	  br.late_days lateDays,
	  br.late_interest lateInterest,
	  br.repossessed_addtime repossessedAddtime,
	  br.repossessed_addip repossessedAddip,
	  br.repayment_id repaymentId,
	  br.user_id userId,
	  br.deduct_interest_fee deductInterestFee,
	  br.deduct_late_interest_fee deductLateInterestFee
	FROM
	  rb_borrow_repossessed br
	WHERE 1 = 1 
	<if test="userId != null and userId != ''">
		AND user_id = #{userId}
	</if>
	  AND (repossessed_status = 1 
	  OR repossessed_status = 3)
	ORDER BY prepare_datetime ASC
  </select>
  
  <select id="getPrepareAmountOrRepossessedInterestByUserId" parameterType="java.lang.Integer" resultType="java.util.HashMap">
  	SELECT ifnull(SUM(br.repossessed_interest),0) AS repossessedInterest , ifnull(SUM(prepare_amount),0) AS prepareAmount
	FROM rb_borrow_tender bt
	LEFT JOIN rb_borrow_repossessed br ON bt.id=br.tender_id
	WHERE br.user_id=#{userId} AND br.repossessed_status=#{repossessedStatus}
  </select>
  
  	<select id="selectTotalCount" resultType="int" parameterType="Map">
  	select count(*)  FROM rb_borrow_repossessed br LEFT JOIN rb_user u ON br.user_id=u.id 
    where 1=1 
	  	<if test="repayId !=null">
		   and repayment_id=#{repayId}
		</if>
  	</select>
  	<!-- 代收记录数 -->
  	<select id="selectTotalCounts" resultType="int" parameterType="Map">
  	select count(*)  FROM rb_borrow_repossessed br 
    where 1=1 and br.repossessed_status=1
	  	<if test="userId !=null">
		   and br.user_id=#{userId}
		</if>
  	</select>
  	<!-- 个人代收总额 -->
  	<select id="selectTotalMoneys" resultType="DECIMAL" parameterType="Map">
  	select SUM(br.repossessed_interest+br.repossessed_capital)  FROM rb_borrow_repossessed br 
    where 1=1 and br.repossessed_status=1
	  	<if test="userId !=null">
		   and br.user_id=#{userId}
		</if>
  	</select>
  	<select id="selectByEntity" resultType="Map" parameterType="Map">
	SELECT br.id repayId, br.repossessed_capital repossessedCapital,br.repossessed_interest repossessedInterest,br.late_interest lateInterest,br.repossessed_status repossessedStatus,u.user_account userAccount
    FROM rb_borrow_repossessed br LEFT JOIN rb_user u ON br.user_id=u.id 
    where 1=1 
		<if test="repayId !=null">
			and repayment_id=#{repayId}
		</if>
	</select>
  
  <select id="selectByRepayId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
      SELECT *
    FROM rb_borrow_repossessed 
    where repayment_id = #{repayId,jdbcType=INTEGER}
  </select>
  <!-- 查询逾期或者收益中的 -->
  <select id="selectByRepayIdOverdue" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
      SELECT *
    FROM rb_borrow_repossessed 
    where repayment_id = #{repayId,jdbcType=INTEGER} and repossessed_status IN (1,3)
  </select>
    <select id="selectByRepayIdAndStatus" resultMap="BaseResultMap" parameterType="Map">
      SELECT *
    FROM rb_borrow_repossessed 
    <where>
    <if test="repayId != null" >
    and repayment_id = #{repayId,jdbcType=INTEGER}
    </if>
    <if test="inStatus != null" >
    and	repossessed_status in 
		<foreach item="item" index="index" collection="inStatus" open="(" separator="," close=")">  
				  #{item}  
		</foreach>  
    </if>
    </where>
     
  </select>
  <select id="selectByTenderId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from rb_borrow_repossessed
    where tender_id = #{tenderid,jdbcType=INTEGER}
  </select>
  
  <select id="selectBorrowRepossessedByTenderId" resultMap="BaseResultMap" parameterType="map">
  	SELECT * FROM rb_borrow_repossessed WHERE tender_id=#{tenderId} AND repossessed_status !=#{repossessedStatus}
  	order by id asc
  </select>
  
  <select id="getborrowRepossessedByTransferId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  		SELECT br.* FROM rb_borrow_repossessed br
		LEFT JOIN rb_borrow_transfer_repossessed btr ON br.id=btr.repossessed_id
		WHERE btr.transfer_id=#{transferId}
  </select>
  
  <select id="getBorrowRepossessedListByPkList" parameterType="map" resultType="map">
  	SELECT br.*,b.borrow_title FROM rb_borrow_repossessed br
	LEFT JOIN rb_borrow_tender bt ON br.tender_id=bt.id
	LEFT JOIN rb_borrow b ON bt.borrow_id=b.id
	<where>
		<foreach collection="list" item="item" separator="or" >
			br.id=#{item}		
		</foreach>
	</where> 
  </select>
  
   <select id="getBorrowRepossessedListByRepossessedPkList" parameterType="map" resultMap="BaseResultMap">
  	SELECT br.* FROM rb_borrow_repossessed br
	LEFT JOIN rb_borrow_tender bt ON br.tender_id=bt.id
	LEFT JOIN rb_borrow b ON bt.borrow_id=b.id
	<where>
		<foreach collection="list" item="item" separator="or" >
			br.id=#{item}		
		</foreach>
	</where>
	order by br.id asc
  </select>
  
  <!-- 查询收回本金，收回利息。。。。。-->
  <select id="selectSum" resultType="Map" parameterType="Map" >
    SELECT 
		SUM(r.repossessed_capital) capital,
		SUM(r.repossessed_interest) interest,
		SUM(r.late_interest) lateInterest,
		SUM(r.deduct_interest_fee) interestFee
	
	 FROM rb_borrow b ,rb_borrow_repossessed r ,rb_borrow_tender t 
	 WHERE b.id = t.borrow_id AND r.tender_id = t.id 
	<if test="userId != null and userId !=''" >
       and t.user_id = #{userId}
    </if>
    <if test="repossessedStatus != null and repossessedStatus !=''" >
       and r.repossessed_status = #{repossessedStatus}
    </if>
    <if test="bidKind != null and bidKind !=''" >
       and b.bid_kind = #{bidKind}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rb_borrow_repossessed
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rb_borrow_repossessed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rbao.east.entity.BorrowRepossessed" >
    insert into rb_borrow_repossessed (id, repossessed_status, repossessed_sequence, 
      tender_id, prepare_datetime, paid_datetime, 
      prepare_amount, paid_amount, repossessed_interest, 
      repossessed_capital, late_days, late_interest, 
      repossessed_addtime, repossessed_addip)
    values (#{id,jdbcType=INTEGER}, #{repossessedStatus,jdbcType=INTEGER}, #{repossessedSequence,jdbcType=INTEGER}, 
      #{tenderId,jdbcType=INTEGER}, #{prepareDatetime,jdbcType=TIMESTAMP}, #{paidDatetime,jdbcType=TIMESTAMP}, 
      #{prepareAmount,jdbcType=DECIMAL}, #{paidAmount,jdbcType=DECIMAL}, #{repossessedInterest,jdbcType=DECIMAL}, 
      #{repossessedCapital,jdbcType=DECIMAL}, #{lateDays,jdbcType=INTEGER}, #{lateInterest,jdbcType=VARCHAR}, 
      #{repossessedAddtime,jdbcType=INTEGER}, #{repossessedAddip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rbao.east.entity.BorrowRepossessed"
  useGeneratedKeys="true" keyProperty="id"
   >
    insert into rb_borrow_repossessed
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="repossessedStatus != null" >
        repossessed_status,
      </if>
      <if test="repossessedSequence != null" >
        repossessed_sequence,
      </if>
      <if test="tenderId != null" >
        tender_id,
      </if>
      <if test="prepareDatetime != null" >
        prepare_datetime,
      </if>
      <if test="paidDatetime != null" >
        paid_datetime,
      </if>
      <if test="prepareAmount != null" >
        prepare_amount,
      </if>
      <if test="paidAmount != null" >
        paid_amount,
      </if>
      <if test="repossessedInterest != null" >
        repossessed_interest,
      </if>
      <if test="repossessedCapital != null" >
        repossessed_capital,
      </if>
      <if test="lateDays != null" >
        late_days,
      </if>
      <if test="lateInterest != null" >
        late_interest,
      </if>
      <if test="repossessedAddtime != null" >
        repossessed_addtime,
      </if>
      <if test="repossessedAddip != null" >
        repossessed_addip,
      </if>
      <if test="repaymentId != null" >
        repayment_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="currentPeriod != null">
				current_period,
			</if>
			<if test="totalPeriod != null">
				total_period,
			</if>
	<if test="deductInterestFee != null">
				deduct_interest_fee,
			</if>
			<if test="deductLateInterestFee != null">
				deduct_late_interest_fee,
			</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="repossessedStatus != null" >
        #{repossessedStatus,jdbcType=INTEGER},
      </if>
      <if test="repossessedSequence != null" >
        #{repossessedSequence,jdbcType=INTEGER},
      </if>
      <if test="tenderId != null" >
        #{tenderId,jdbcType=INTEGER},
      </if>
      <if test="prepareDatetime != null" >
        #{prepareDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidDatetime != null" >
        #{paidDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="prepareAmount != null" >
        #{prepareAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="repossessedInterest != null" >
        #{repossessedInterest,jdbcType=DECIMAL},
      </if>
      <if test="repossessedCapital != null" >
        #{repossessedCapital,jdbcType=DECIMAL},
      </if>
      <if test="lateDays != null" >
        #{lateDays,jdbcType=INTEGER},
      </if>
      <if test="lateInterest != null" >
        #{lateInterest,jdbcType=VARCHAR},
      </if>
      <if test="repossessedAddtime != null" >
        #{repossessedAddtime,jdbcType=INTEGER},
      </if>
      <if test="repossessedAddip != null" >
        #{repossessedAddip,jdbcType=VARCHAR},
      </if>
      <if test="repaymentId != null" >
        #{repaymentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="currentPeriod != null">
				#{currentPeriod,jdbcType=INTEGER},
			</if>
			<if test="totalPeriod != null">
				#{totalPeriod,jdbcType=INTEGER},
			</if>
	<if test="deductInterestFee != null">
				#{deductInterestFee,jdbcType=DECIMAL},
			</if>
			<if test="deductLateInterestFee != null">
				#{deductLateInterestFee,jdbcType=DECIMAL},
			</if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rbao.east.entity.BorrowRepossessed" >
    update rb_borrow_repossessed
    <set >
      <if test="repossessedStatus != null" >
        repossessed_status = #{repossessedStatus,jdbcType=INTEGER},
      </if>
      <if test="repossessedSequence != null" >
        repossessed_sequence = #{repossessedSequence,jdbcType=INTEGER},
      </if>
      <if test="tenderId != null" >
        tender_id = #{tenderId,jdbcType=INTEGER},
      </if>
      <if test="currentPeriod != null" >
        current_period = #{currentPeriod,jdbcType=INTEGER},
      </if>
      <if test="totalPeriod != null" >
        total_period = #{totalPeriod,jdbcType=INTEGER},
      </if>
      <if test="prepareDatetime != null" >
        prepare_datetime = #{prepareDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidDatetime != null" >
        paid_datetime = #{paidDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="prepareAmount != null" >
        prepare_amount = #{prepareAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="repossessedInterest != null" >
        repossessed_interest = #{repossessedInterest,jdbcType=DECIMAL},
      </if>
      <if test="repossessedCapital != null" >
        repossessed_capital = #{repossessedCapital,jdbcType=DECIMAL},
      </if>
      <if test="lateDays != null" >
        late_days = #{lateDays,jdbcType=INTEGER},
      </if>
      <if test="lateInterest != null" >
        late_interest = #{lateInterest,jdbcType=VARCHAR},
      </if>
      <if test="repossessedAddtime != null" >
        repossessed_addtime = #{repossessedAddtime,jdbcType=INTEGER},
      </if>
      <if test="repossessedAddip != null" >
        repossessed_addip = #{repossessedAddip,jdbcType=VARCHAR},
      </if>
         <if test="repaymentId != null" >
        repayment_id=#{repaymentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        	user_id=#{userId,jdbcType=INTEGER},
      </if>
      <if test="deductInterestFee != null">
				deduct_interest_fee = #{deductInterestFee,jdbcType=DECIMAL},
			</if>
			<if test="deductLateInterestFee != null">
				deduct_late_interest_fee = #{deductLateInterestFee,jdbcType=DECIMAL},
			</if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rbao.east.entity.BorrowRepossessed" >
    update rb_borrow_repossessed
    set repossessed_status = #{repossessedStatus,jdbcType=INTEGER},
      repossessed_sequence = #{repossessedSequence,jdbcType=INTEGER},
      tender_id = #{tenderId,jdbcType=INTEGER},
      prepare_datetime = #{prepareDatetime,jdbcType=TIMESTAMP},
      paid_datetime = #{paidDatetime,jdbcType=TIMESTAMP},
      prepare_amount = #{prepareAmount,jdbcType=DECIMAL},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      repossessed_interest = #{repossessedInterest,jdbcType=DECIMAL},
      repossessed_capital = #{repossessedCapital,jdbcType=DECIMAL},
      late_days = #{lateDays,jdbcType=INTEGER},
      late_interest = #{lateInterest,jdbcType=VARCHAR},
      repossessed_addtime = #{repossessedAddtime,jdbcType=INTEGER},
      repossessed_addip = #{repossessedAddip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 统计昨日收益 -->
  <select id="selectSumYesterday" resultType="MAP" parameterType="MAP">
	select IFNULL(sum(rb.repossessed_interest),0) sumInterest
	  from rb_borrow_repossessed rb
	 where rb.repossessed_status = 2
	   and DATE_FORMAT(rb.paid_datetime, '%y-%m-%d') =
	       DATE_FORMAT(#{yesterDay}, '%y-%m-%d')
	   and tender_id in
	       (select id from rb_borrow_tender bt where bt.user_id = #{userId})
  </select>
  <!-- 统计当日的回款记录 -->
  <select id="selectCurrentDayLog" resultType="Map" parameterType="Map">
  SELECT count(*) totalCount,SUM(rb.repossessed_capital+rb.repossessed_interest) allRepMoney,SUM(rb.repossessed_capital) allCapital ,sum(rb.repossessed_interest) allInterest 
  from rb_borrow_repossessed rb WHERE 1=1
  <if test="userId !=null">
  AND rb.user_id=#{userId}
  </if>
  <if test="repossessedStatus !=null">
  AND rb.repossessed_status=#{repossessedStatus}
  </if>
   <if test="dateTime !=null ">
       AND DATE_FORMAT(rb.repossessed_addTime,'%y-%m-%d') =DATE_FORMAT(#{dateTime},'%y-%m-%d')
   </if>
  </select> 
</mapper>