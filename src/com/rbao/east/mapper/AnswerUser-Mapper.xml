<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rbao.east.mapper.AnswerUserMapper" >
  <resultMap id="BaseResultMap" type="com.rbao.east.entity.AnswerUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="answer_id" property="answerId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="hasvote" property="hasvote" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, answer_id, user_id, hasvote
  </sql>
  
  <delete id="deleteByAnswerId" parameterType="java.lang.Integer">
  		DELETE FROM
  		rb_dis_answer_user
  		WHERE answer_id = #{answerId}
  </delete>
  
  <delete id="deleteByQuestionId" parameterType="java.lang.Integer">
  		DELETE FROM
  		rb_dis_answer_user
  		WHERE answer_id IN
  		(SELECT id FROM rb_dis_answer WHERE question_id = #{questionId})
  </delete>
  
  <select id="getAnswerUsersCount" resultType="java.lang.Integer"
		parameterType="Map">
		select count(*)
		from rb_dis_answer_user
		<where>
			<if test="answerId != null">
				and answer_id = #{answerId,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				and user_id = #{userId,jdbcType=INTEGER}
			</if>
			<if test="hasvote != null">
				and hasvote = #{hasvote,jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<select id="getAnswerUsers" resultMap="BaseResultMap"
		parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from rb_dis_answer_user
		<where>
			<if test="answerId != null">
				and answer_id = #{answerId,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				and user_id = #{userId,jdbcType=INTEGER}
			</if>
			<if test="hasvote != null">
				and hasvote = #{hasvote,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
  <!-- ///  -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rb_dis_answer_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rb_dis_answer_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rbao.east.entity.AnswerUser" >
    insert into rb_dis_answer_user (id, answer_id, user_id, 
      hasvote)
    values (#{id,jdbcType=INTEGER}, #{answerId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{hasvote,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rbao.east.entity.AnswerUser" >
    insert into rb_dis_answer_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="answerId != null" >
        answer_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="hasvote != null" >
        hasvote,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="answerId != null" >
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="hasvote != null" >
        #{hasvote,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rbao.east.entity.AnswerUser" >
    update rb_dis_answer_user
    <set >
      <if test="answerId != null" >
        answer_id = #{answerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="hasvote != null" >
        hasvote = #{hasvote,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rbao.east.entity.AnswerUser" >
    update rb_dis_answer_user
    set answer_id = #{answerId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      hasvote = #{hasvote,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>