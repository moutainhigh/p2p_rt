<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rbao.east.mapper.AccountDeductMapper">
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache" /> -->
	<resultMap id="BaseResultMap" type="com.rbao.east.entity.AccountDeduct">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="deduct_type" property="deductType" jdbcType="INTEGER" />
		<result column="deduct_amount" property="deductAmount"
			jdbcType="DECIMAL" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="add_ip" property="addIp" jdbcType="VARCHAR" />
		<result column="add_user_id" property="addUserId" jdbcType="INTEGER" />
		<result column="check_user_id" property="checkUserId" jdbcType="INTEGER" />
		<result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
		<result column="check_ip" property="checkIp" jdbcType="VARCHAR" />
		<result column="check_state" property="checkState" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectTotalCount" resultType="int" parameterType="Map">
		select count(*) FROM rb_account_deduct ad INNER JOIN rb_user u ON
		ad.user_id = u.id
		LEFT JOIN rb_user checkUser ON ad.check_user_id = checkUser.id
		LEFT JOIN rb_user addUser ON ad.add_user_id = addUser.id where 1=1
		<if test="id !=null">
			and id =#{id}
		</if>
		<if test="checkUserId !=null">
			and ad.check_user_id = checkUser.id
		</if>
		<if test="userAccount !=null">
			and u.user_account like CONCAT('%', #{userAccount}, '%')
		</if>
		order by check_state
	</select>
	<select id="selectByEntity" resultMap="BaseResultMap"
		parameterType="Map">
		SELECT ad.*,u.user_account userAccount,checkUser.user_account
		checkUserAccount ,addUser.user_account addUserAccount
		FROM rb_account_deduct ad INNER JOIN rb_user u ON ad.user_id = u.id
		LEFT JOIN rb_user checkUser ON ad.check_user_id = checkUser.id
		LEFT JOIN rb_user addUser ON ad.add_user_id = addUser.id where 1=1
		<if test="id !=null">
			and id =#{id}
		</if>
		<if test="checkUserId !=null">
			and ad.check_user_id = checkUser.id
		</if>
		<if test="userAccount !=null">
			and u.user_account like CONCAT('%', #{userAccount}, '%')
		</if>
		order by check_state
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		ad.*,u.user_account userAccount,checkUser.user_account checkUserAccount
		,addUser.user_account addUserAccount
		FROM rb_account_deduct ad INNER JOIN rb_user u ON ad.user_id = u.id
		LEFT JOIN rb_user checkUser ON ad.check_user_id = checkUser.id
		LEFT JOIN rb_user addUser ON ad.add_user_id=addUser.id
		where ad.id = #{id,jdbcType=INTEGER}
	</select>
	<insert id="insert" parameterType="com.rbao.east.entity.AccountDeduct">
		insert into rb_account_deduct (id, user_id, deduct_type,
		deduct_amount, remark, add_time,
		add_ip, add_user_id, check_user_id,
		check_time, check_ip,check_state)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{deductType,jdbcType=INTEGER},
		#{deductAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP},
		#{addIp,jdbcType=VARCHAR}, #{addUserId,jdbcType=INTEGER},
		#{checkUserId,jdbcType=INTEGER},
		#{checkTime,jdbcType=TIMESTAMP}, #{checkIp,jdbcType=VARCHAR},#{checkState,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.rbao.east.entity.AccountDeduct"
		useGeneratedKeys="true" keyProperty="id">
		insert into rb_account_deduct
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="deductType != null">
				deduct_type,
			</if>
			<if test="deductAmount != null">
				deduct_amount,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="addIp != null">
				add_ip,
			</if>
			<if test="addUserId != null">
				add_user_id,
			</if>
			<if test="checkUserId != null">
				check_user_id,
			</if>
			<if test="checkTime != null">
				check_time,
			</if>
			<if test="checkIp != null">
				check_ip,
			</if>
			<if test="checkState != null">
				check_state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="deductType != null">
				#{deductType,jdbcType=INTEGER},
			</if>
			<if test="deductAmount != null">
				#{deductAmount,jdbcType=DECIMAL},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="addIp != null">
				#{addIp,jdbcType=VARCHAR},
			</if>
			<if test="addUserId != null">
				#{addUserId,jdbcType=INTEGER},
			</if>
			<if test="checkUserId != null">
				#{checkUserId,jdbcType=INTEGER},
			</if>
			<if test="checkTime != null">
				#{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkIp != null">
				#{checkIp,jdbcType=VARCHAR},
			</if>
			<if test="checkState != null">
				#{checkState,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.rbao.east.entity.AccountDeduct">
		update rb_account_deduct
		<set>
			<if test="userId != null">
				user_id=#{userId,jdbcType=INTEGER},
			</if>
			<if test="deductType != null">
				deduct_type=#{deductType,jdbcType=INTEGER},
			</if>
			<if test="deductAmount != null">
				deduct_amount=#{deductAmount,jdbcType=DECIMAL},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="addIp != null">
				add_ip = #{addIp,jdbcType=VARCHAR},
			</if>
			<if test="addUserId != null">
				add_user_id =#{addUserId,jdbcType=INTEGER},
			</if>
			<if test="checkUserId != null">
				check_user_id =#{checkUserId,jdbcType=INTEGER},
			</if>
			<if test="checkTime != null">
				check_time =#{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkIp != null">
				check_ip =#{checkIp,jdbcType=VARCHAR},
			</if>
			<if test="checkState != null">
				check_state =#{checkState,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.rbao.east.entity.AccountDeduct">
		update rb_account_deduct
		set user_id = #{userId,jdbcType=INTEGER},
		deduct_type = #{deductType,jdbcType=INTEGER},
		deduct_amount = #{deductAmount,jdbcType=DECIMAL},
		remark = #{remark,jdbcType=VARCHAR},
		add_time = #{addTime,jdbcType=TIMESTAMP},
		add_ip = #{addIp,jdbcType=VARCHAR},
		add_user_id=#{addUserId,jdbcType=INTEGER},
		check_user_id=#{checkUserId,jdbcType=INTEGER},
		check_time=#{checkTime,jdbcType=TIMESTAMP},
		check_ip=#{checkIp,jdbcType=VARCHAR},
		check_state=#{checkState,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>