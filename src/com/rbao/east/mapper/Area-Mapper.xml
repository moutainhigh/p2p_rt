<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rbao.east.mapper.AreaMapper">
		<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache" /> -->
	<resultMap id="BaseResultMap" type="com.rbao.east.entity.Area">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="area_name" property="areaName" jdbcType="VARCHAR" />
		<result column="area_code" property="areaCode" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="area_domain" property="areaDomain" jdbcType="VARCHAR" />
		<result column="area_sequence" property="areaSequence"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id, area_name, area_code, parent_id, area_domain,
		area_sequence
	</sql>
	
	<select id="checkAreaExist"  parameterType="Map" resultType="java.lang.Integer">
		select count(*)
		from rb_area
		<where>
			<if test="areaCode != null">
				and area_code = #{areaCode}
			</if>
		</where>
	</select>
	
	<!-- 地址树 -->
	<select id="selectAll"  resultType="TreeModel" parameterType="Area">
		select id ,area_name as title ,parent_id as pid from rb_area
	</select>

	<select id="selectByParentId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from rb_area
		where parent_id = #{parentId,jdbcType=INTEGER}
	</select>

	<select id="selectByCon" resultMap="BaseResultMap"
		parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from rb_area
		<where>
			<if test="parentId != null">
				and parent_id = #{parentId}
			</if>
			<if test="areaName != null">
				and area_name like CONCAT('%', #{areaName}, '%')
			</if>
			<if test="areaCode != null">
				and area_code like CONCAT('%', #{areaCode}, '%')
			</if>
			<if test="areaDomain != null">
				and area_domain like CONCAT('%', #{areaDomain}, '%')
			</if>
			<if test="areaSequence != null">
				and area_sequence = #{areaSequence}
			</if>
		</where>
		order by area_sequence asc
	</select>

	<select id="getCountByCon" resultType="java.lang.Integer"
		parameterType="Map">
		select count(*)
		from rb_area
		<where>
			<if test="parentId != null">
				and parent_id = #{parentId}
			</if>
			<if test="areaName != null">
				and area_name like CONCAT('%', #{areaName}, '%')
			</if>
			<if test="areaCode != null">
				and area_code like CONCAT('%', #{areaCode}, '%')
			</if>
			<if test="areaDomain != null">
				and area_domain like CONCAT('%', #{areaDomain}, '%')
			</if>
			<if test="areaSequence != null">
				and area_sequence = #{areaSequence}
			</if>
		</where>
	</select>

	<select id="getCountByParentId" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select count(*)
		from rb_area
		where parent_id =#{parentId,jdbcType=INTEGER}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from rb_area
		where id = #{id,jdbcType=INTEGER}
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		rb_area
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.rbao.east.entity.Area">
		insert into rb_area (id,
		area_name, area_code,
		parent_id, area_domain, area_sequence
		)
		values
		(#{id,jdbcType=INTEGER}, #{areaName,jdbcType=VARCHAR},
		#{areaCode,jdbcType=VARCHAR},
		#{parentId,jdbcType=INTEGER},
		#{areaDomain,jdbcType=VARCHAR}, #{areaSequence,jdbcType=INTEGER}
		)
	</insert>

	<insert id="insertSelective" parameterType="com.rbao.east.entity.Area">
		insert into rb_area
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="areaName != null">
				area_name,
			</if>
			<if test="areaCode != null">
				area_code,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="areaDomain != null">
				area_domain,
			</if>
			<if test="areaSequence != null">
				area_sequence,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="areaName != null">
				#{areaName,jdbcType=VARCHAR},
			</if>
			<if test="areaCode != null">
				#{areaCode,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="areaDomain != null">
				#{areaDomain,jdbcType=VARCHAR},
			</if>
			<if test="areaSequence != null">
				#{areaSequence,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.rbao.east.entity.Area">
		update rb_area
		<set>
			<if test="areaName != null">
				area_name = #{areaName,jdbcType=VARCHAR},
			</if>
			<if test="areaCode != null">
				area_code = #{areaCode,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="areaDomain != null">
				area_domain = #{areaDomain,jdbcType=VARCHAR},
			</if>
			<if test="areaSequence != null">
				area_sequence = #{areaSequence,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.rbao.east.entity.Area">
		update rb_area
		set
		area_name = #{areaName,jdbcType=VARCHAR},
		area_code =
		#{areaCode,jdbcType=VARCHAR},
		parent_id = #{parentId,jdbcType=INTEGER},
		area_domain = #{areaDomain,jdbcType=VARCHAR},
		area_sequence =
		#{areaSequence,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>