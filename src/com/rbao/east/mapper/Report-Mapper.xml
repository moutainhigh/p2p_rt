<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rbao.east.mapper.ReportMapper">
			<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache" /> -->
	<resultMap id="BaseResultMap" type="com.rbao.east.entity.Report">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="report_date" property="reportDate" jdbcType="DATE" />
		<result column="register_count" property="registerCount"
			jdbcType="INTEGER" />
		<result column="vip_count" property="vipCount" jdbcType="INTEGER" />
		<result column="attestation_realname_count" property="attestationRealnameCount"
			jdbcType="INTEGER" />
		<result column="attestation_tel_count" property="attestationTelCount"
			jdbcType="INTEGER" />
		<result column="borrow_fee" property="borrowFee" jdbcType="DECIMAL" />
		<result column="interest_fee" property="interestFee" jdbcType="DECIMAL" />
		<result column="cash_fee" property="cashFee" jdbcType="DECIMAL" />
		<result column="vip_fee" property="vipFee" jdbcType="DECIMAL" />
		<result column="recharge_fee" property="rechargeFee" jdbcType="DECIMAL" />
		<result column="overdue_repayed_count" property="overdueRepayedCount"
			jdbcType="INTEGER" />
		<result column="overdue_repayed_amount" property="overdueRepayedAmount"
			jdbcType="DECIMAL" />
		<result column="new_increased_count" property="newIncreasedCount"
			jdbcType="INTEGER" />
		<result column="new_increased_amount" property="newIncreasedAmount"
			jdbcType="DECIMAL" />
		<result column="recharge_online" property="rechargeOnline"
			jdbcType="DECIMAL" />
		<result column="recharge_offline" property="rechargeOffline"
			jdbcType="DECIMAL" />
		<result column="cash" property="cash" jdbcType="DECIMAL" />
		<result column="get_in" property="getIn" jdbcType="DECIMAL" />
		<result column="interest" property="interest" jdbcType="DECIMAL" />
		<result column="tender_reward" property="tenderReward"
			jdbcType="DECIMAL" />
		<result column="recharge_offline_reward" property="rechargeOfflineReward"
			jdbcType="DECIMAL" />
		<result column="continue_reward" property="continueReward"
			jdbcType="DECIMAL" />
		<result column="recommend_reward" property="recommendReward"
			jdbcType="DECIMAL" />
		<result column="register_reward" property="registerReward"
			jdbcType="DECIMAL" />
		<result column="publish_count" property="publishCount"
			jdbcType="INTEGER" />
		<result column="publish_amount" property="publishAmount"
			jdbcType="DECIMAL" />
		<result column="repayed_count" property="repayedCount"
			jdbcType="INTEGER" />
		<result column="repayed_amount" property="repayedAmount"
			jdbcType="DECIMAL" />
		<result column="tender_count" property="tenderCount" jdbcType="INTEGER" />
		<result column="tender_amount" property="tenderAmount"
			jdbcType="DECIMAL" />
		<result column="effe_tender_count" property="effeTenderCount"
			jdbcType="INTEGER" />
		<result column="effe_tender_amount" property="effeTenderAmount"
			jdbcType="DECIMAL" />
		<result column="cash_count" property="cashCount"
			jdbcType="INTEGER" />
		<result column="recharge_count" property="rechargeCount"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, report_date, register_count, vip_count,
		attestation_realname_count,
		attestation_tel_count,
		borrow_fee,
		interest_fee, cash_fee, vip_fee, recharge_fee, overdue_repayed_count,
		overdue_repayed_amount, new_increased_count, new_increased_amount,
		recharge_online,
		recharge_offline, cash, get_in, interest,
		tender_reward, recharge_offline_reward,
		continue_reward,
		recommend_reward, register_reward, publish_count,
		publish_amount,
		repayed_count, repayed_amount, tender_count, tender_amount,
		effe_tender_count,
		effe_tender_amount,
		cash_count,
		recharge_count
	</sql>
	
	<!-- 平台资金统计柱状图 -->
	<select id="platformHistSummary" parameterType="String" resultType="Map">
		SELECT
		    SUM(r.borrow_fee) borrow_fee,
		    SUM(r.interest_fee) interest_fee,
		    SUM(r.cash_fee) cash_fee,
		    SUM(r.vip_fee) vip_fee,
		    SUM(r.recharge_fee) recharge_fee,
		    SUM(r.tender_reward) tender_reward,
		    SUM(r.recharge_offline_reward) recharge_offline_reward,
		    SUM(r.continue_reward) continue_reward,
		    SUM(r.recommend_reward) recommend_reward,
		    SUM(r.register_reward) register_reward
		FROM
		   rb_report r
		WHERE
		   YEAR(r.report_date) = YEAR(#{date})
	</select>
	
	<!-- 充值提现数据统计 -->
	<select id="rechargeCashSummary" parameterType="String" resultType="Map">
		SELECT
    		d.dic_name 'month',
    		IFNULL( SUM( r.recharge_online + r.recharge_offline ), 0.00 ) 'recharge',
    		IFNULL( SUM( r.cash ), 0.00 ) 'cash',
    		SUM( r.recharge_count ) 'recharge_count',
    		SUM( r.cash_count) 'cash_count'
		FROM
    		rb_dictionary d INNER JOIN rb_dictionary dp ON dp.id = d.parent_id AND dp.dic_code = 'months' LEFT JOIN rb_report r ON d.dic_code = MONTH(r.report_date) AND YEAR(r.report_date) = YEAR(#{date})
		GROUP BY
    		d.dic_code
		ORDER BY d.dic_code
	</select>
	
	<!-- 平台资金统计 -->
	<select id="platformSummary" parameterType="String" resultType="Map">
		SELECT
    		d.dic_name 'quarter',
    		IFNULL(SUM(r.borrow_fee + r.interest_fee + r.cash_fee + r.vip_fee + r.recharge_fee), 0.00) 'in_money',
    		IFNULL(SUM(r.tender_reward + r.recharge_offline_reward + r.continue_reward + r.recommend_reward + r.register_reward), 0.00) 'out_money',
    		IFNULL(SUM( (r.borrow_fee + r.interest_fee + r.cash_fee + r.vip_fee + r.recharge_fee) - (r.tender_reward + r.recharge_offline_reward + r.continue_reward + r.recommend_reward + r.register_reward)), 0.00) 'profit_loss'
		FROM
    		rb_dictionary d INNER JOIN rb_dictionary dp ON dp.id = d.parent_id AND dp.dic_code = 'quarters' LEFT JOIN rb_report r ON d.dic_code = QUARTER(r.report_date) AND YEAR(r.report_date) = YEAR(#{date})
		GROUP BY
    		quarter
		ORDER BY d.dic_code
	</select>
	
	<!-- 统计用户总充值 -->
	<select id="summaryRecharge" resultType="BigDecimal" parameterType="Date">
		SELECT IFNULL(SUM(recharge_online + recharge_offline + recharge_offline_reward), 0) FROM rb_report
	</select>
	
	<!-- 统计用户总提现 -->
	<select id="summaryCash" resultType="BigDecimal" parameterType="Date">
		SELECT IFNULL(SUM(cash), 0) FROM rb_report
	</select>
	
	<!-- 平台总收益 -->
	<select id="summaryPlatformEarnings" resultType="BigDecimal">
		SELECT IFNULL(SUM(borrow_fee + interest_fee+cash_fee + vip_fee + recharge_fee), 0) FROM rb_report
	</select>
	
	<!-- 用户总收益 -->
	<select id="summaryUserEarnings" resultType="BigDecimal">
		SELECT IFNULL(SUM(interest + tender_reward + recharge_offline_reward + continue_reward + recommend_reward + register_reward), 0) FROM rb_report
	</select>
	
	<!-- 满标额 -->
	<select id="selectFullMoney" resultType="BigDecimal" parameterType="Map">
		SELECT 
		  IFNULL(SUM(tender_amount),0) 
		FROM
		  rb_report 
		WHERE 1=1 
	<if test="startDate !=null and startDate !=''">
	    <![CDATA[and  DATE_FORMAT(report_date, '%Y-%m-%d') >= #{startDate } ]]>
	</if>
    <if test="endDate !=null and endDate !=''">
    	<![CDATA[AND DATE_FORMAT(report_date, '%Y-%m-%d') <= #{endDate }  ]]>
    </if>
	</select>
	<!-- 月度统计 -->
	<select id="countByMonth" resultType="Map">
	SELECT  DATE_FORMAT(report_date,'%Y-%m') monthDate,
	SUM(register_count) registerCount,
	SUM(publish_count) publishCount,
	SUM(publish_amount) publishAmount,
	SUM(repayed_count) repayedCount,
	SUM(repayed_amount) repayedAmount,
	SUM(tender_amount) tenderAmount,
	SUM(tender_count) tenderCount
FROM rb_report GROUP BY monthDate ORDER BY monthDate DESC
	</select>
	
	<select id="countMonth" resultType="int">
	SELECT  COUNT(DISTINCT DATE_FORMAT(report_date,'%Y-%m')) 
	FROM rb_report 
	</select>
	
	<select id="selectWealth" resultType="Map">
	SELECT ifNull(SUM(interest),0) interest,
		ifNull(SUM(tender_reward),0) tenderReward,
		ifNull(SUM(recharge_offline_reward),0) rechargeOfflineReward,
		ifNull(SUM(continue_reward),0) continueReward,
		ifNull(SUM(recommend_reward),0) recommendReward,
		ifNull(SUM(register_reward),0) registerReward,
		ifNull(SUM(new_increased_count),0) newIncreasedCount,
		ifNull(SUM(new_increased_amount),0) newIncreasedAmount,
		ifNull(SUM(repayed_count),0) repayedCount,
		ifNull(SUM(repayed_amount),0) repayedAmount FROM rb_report 
	</select>




	<!-- 得到当天注册数量 -->
	<select id="getRegisterCount" parameterType="map" resultType="java.lang.Integer">
		SELECT count(1) FROM rb_user
		WHERE is_system=2  
	 <![CDATA[	AND user_addtime >= #{startDate} AND user_addtime <= #{endDate} ]]>
	</select>

	<!-- 得到当天申请Vip数量 -->
	<select id="getVipCount" parameterType="map" resultType="java.lang.Integer">
		SELECT count(1) FROM rb_vip_user
		WHERE   
	 <![CDATA[ vip_add_datetime >= #{startDate} AND vip_add_datetime <= #{endDate} ]]>
	</select>


	<!-- 得到当天实名认证,手机认证数量 -->
	<select id="getAttestationCountByCreditCode" parameterType="map"
		resultType="java.lang.Integer">
		SELECT count(1) FROM rb_credit_log cl
		LEFT JOIN rb_credit_type ct ON
		cl.credit_type_id=ct.id
		WHERE 
	 <![CDATA[ cl.credit_operate_datetime >= #{startDate} AND cl.credit_operate_datetime <= #{endDate} ]]>
		<if test="realnameCode != null">
			AND ct.credit_code=#{realnameCode}
		</if>
		<if test="phoneCode != null">
			AND ct.credit_code=#{phoneCode}
		</if>
	</select>

	<!-- 得到当天手续费 ,投标奖励,线下充值奖励,续投奖励,推荐奖励,注册奖励,还款总额 -->
	<select id="getAccountLogMoneyByTradeCode" parameterType="map"
		resultType="java.lang.String">
		SELECT ifnull(sum(deal_money),0) FROM rb_account_log
		WHERE 
	<![CDATA[ log_addtime >= #{startDate} AND log_addtime <= #{endDate} ]]>
		AND trade_code=#{tradeCode}
	</select>

	<!-- 得到当天还款数 -->
	<select id="getRepayedCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM rb_account_log
		WHERE 
	<![CDATA[ log_addtime >= #{startDate} AND log_addtime <= #{endDate} ]]>
		AND trade_code=#{tradeCode}
	</select>


	<!-- 得到当天提现手续费 -->
	<select id="getCashFee" parameterType="map" resultType="java.lang.String">
		SELECT ifnull(sum(cash_fee),0) FROM rb_account_cash
		WHERE 
	<![CDATA[ verify_time >= #{startDate} AND verify_time <= #{endDate} ]]>
		AND cash_status=1
	</select>


	<!-- 得到当天逾期已还款数量和金额 -->
	<select id="getOverdueRepayedCountAndAmount" parameterType="map"
		resultType="java.util.HashMap">
		SELECT count(1) as count,sum(repayment_realamount) as amount FROM
		rb_borrow_repayment
		WHERE 
	<![CDATA[ repayment_paidtime >= #{startDate} AND repayment_paidtime <= #{endDate} ]]>
		AND TIMESTAMPDIFF(DAY,repayment_time,repayment_paidtime)>=1
		AND repayment_status=#{repaymentStatus}
	</select>

	<!-- 得到当天新增逾期数和金额 -->
	<select id="getNewIncreasedCountAndAmount" parameterType="map"
		resultType="java.util.HashMap">
		SELECT count(1) as count,ifnull(sum(repayment_amount),0) as amount FROM
		rb_borrow_repayment
		WHERE 
	<![CDATA[ repayment_time >= #{startDate} AND repayment_time <= #{endDate} ]]>
		AND repayment_status=#{repaymentStatus}
	</select>

	<!-- 得到当天线上充值和线下充值金额 -->
	<select id="getRecharge" parameterType="map" resultType="java.lang.String">
		SELECT ifnull(SUM(recharge_money),0) FROM rb_account_recharge
		WHERE 
	<![CDATA[ verify_time >= #{startDate} AND verify_time <= #{endDate} ]]>
		AND recharge_status=#{rechargeStatus}
		AND recharge_type=#{rechargeType}
	</select>


	<!-- 得到当天提现金额 -->
	<select id="getCash" parameterType="map" resultType="java.lang.String">
		SELECT ifnull(SUM(cash_account),0) FROM rb_account_cash
		WHERE 
	<![CDATA[ verify_time >= #{startDate} AND verify_time <= #{endDate} ]]>
		AND cash_status=1
	</select>


	<!-- 得到当天利息金额 -->
	<select id="getInterest" parameterType="map" resultType="java.lang.String">
		SELECT ifnull(SUM(repossessed_interest),0) FROM rb_borrow_repossessed
		WHERE 
	<![CDATA[ paid_datetime >= #{startDate} AND paid_datetime <= #{endDate} ]]>
	</select>

	<!-- 得到当天发布数量,发布总额 -->
	<select id="getPublish" parameterType="map" resultType="java.util.HashMap">
		SELECT count(1) as count,ifnull(sum(borrow_sum),0) as amount FROM rb_borrow
		WHERE 
	<![CDATA[ publish_datetime >= #{startDate} AND publish_datetime <= #{endDate} ]]>
	</select>

	<!-- 得到当天投标数,投标总额 -->
	<select id="getTender" parameterType="map" resultType="java.util.HashMap">
		SELECT count(1) as count,ifnull(sum(effective_amount),0) as amount FROM
		rb_borrow_tender
		WHERE 
	<![CDATA[ tender_addtime >= #{startDate} AND tender_addtime <= #{endDate} ]]>
	</select>

	<select id="getTotalCount" resultType="int" parameterType="Map">
		select count(*) from rb_report
		<where>
			<if test="beginTime !=null and beginTime !=''">
	    		<![CDATA[	and DATE_FORMAT(report_date,'%Y-%m-%d') >=  #{beginTime }  ]]>
			</if>
			<if test="endTime !=null and endTime !=''">
		    	<![CDATA[	and DATE_FORMAT(report_date,'%Y-%m-%d') <=  #{endTime }  ]]>
			</if>
		</where>
	</select>

	<!-- 分页 a -->
	<select id="getPageReports" resultMap="BaseResultMap"
		parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from rb_report
		<where>
			<if test="beginTime !=null and beginTime !=''">
	    		<![CDATA[	and DATE_FORMAT(report_date,'%Y-%m-%d') >=  #{beginTime }  ]]>
			</if>
			<if test="endTime !=null and endTime !=''">
		    	<![CDATA[	and DATE_FORMAT(report_date,'%Y-%m-%d') <=  #{endTime }  ]]>
			</if>
		</where>
		order by report_date desc,id desc
	</select>

	<select id="getReportsByDate" resultMap="BaseResultMap"
		parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from rb_report
		<where>
			<if test="beginTime !=null and beginTime !=''">
	    		<![CDATA[	and DATE_FORMAT(report_date,'%Y-%m-%d') >=  #{beginTime }  ]]>
			</if>
			<if test="endTime !=null and endTime !=''">
		    	<![CDATA[	and DATE_FORMAT(report_date,'%Y-%m-%d') <=  #{endTime }  ]]>
			</if>
		</where>
		order by report_date asc
	</select>


	<select id="getSumByUserId" parameterType="map"
		resultType="java.lang.String">
		SELECT ifnull(sum(deal_money),0) FROM rb_account_log
		WHERE trade_code=#{tradeCode} AND user_id=#{userId}
	</select>

	<select id="getRepossessedSumByUserId" parameterType="map"
		resultType="java.lang.String">
		SELECT ifnull(SUM(paid_amount),0) FROM rb_borrow_repossessed
		WHERE user_id=#{userId} AND  repossessed_status = 2
	</select>


	<select id="getReportById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from rb_report
		where id = #{id,jdbcType=INTEGER}
	</select>

	<!-- 获得所有记录a -->
	<select id="getAllReports" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from rb_report
	</select>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from rb_report
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		rb_report
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.rbao.east.entity.Report">
		insert into rb_report (id,
		report_date, register_count,
		vip_count, attestation_realname_count,
		attestation_tel_count,
		borrow_fee, interest_fee, cash_fee,
		vip_fee,
		recharge_fee, overdue_repayed_count,
		overdue_repayed_amount,
		new_increased_count,
		new_increased_amount, recharge_online,
		recharge_offline,
		cash, get_in, interest,
		tender_reward,
		recharge_offline_reward, continue_reward,
		recommend_reward,
		register_reward, publish_count,
		publish_amount, repayed_count,
		repayed_amount,
		tender_count, tender_amount, effe_tender_count,
		effe_tender_amount)
		values (#{id,jdbcType=INTEGER},
		#{reportDate,jdbcType=DATE},
		#{registerCount,jdbcType=INTEGER},
		#{vipCount,jdbcType=INTEGER},
		#{attestationRealnameCount,jdbcType=INTEGER},
		#{attestationTelCount,jdbcType=INTEGER},
		#{borrowFee,jdbcType=DECIMAL}, #{interestFee,jdbcType=DECIMAL},
		#{cashFee,jdbcType=DECIMAL},
		#{vipFee,jdbcType=DECIMAL},
		#{rechargeFee,jdbcType=DECIMAL},
		#{overdueRepayedCount,jdbcType=INTEGER},
		#{overdueRepayedAmount,jdbcType=DECIMAL},
		#{newIncreasedCount,jdbcType=INTEGER},
		#{newIncreasedAmount,jdbcType=DECIMAL},
		#{rechargeOnline,jdbcType=DECIMAL},
		#{rechargeOffline,jdbcType=DECIMAL},
		#{cash,jdbcType=DECIMAL},
		#{getIn,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL},
		#{tenderReward,jdbcType=DECIMAL},
		#{rechargeOfflineReward,jdbcType=DECIMAL},
		#{continueReward,jdbcType=DECIMAL},
		#{recommendReward,jdbcType=DECIMAL},
		#{registerReward,jdbcType=DECIMAL}, #{publishCount,jdbcType=INTEGER},
		#{publishAmount,jdbcType=DECIMAL}, #{repayedCount,jdbcType=INTEGER},
		#{repayedAmount,jdbcType=DECIMAL},
		#{tenderCount,jdbcType=INTEGER},
		#{tenderAmount,jdbcType=DECIMAL},
		#{effeTenderCount,jdbcType=INTEGER},
		#{effeTenderAmount,jdbcType=DECIMAL})
	</insert>
	<insert id="insertSelective" parameterType="com.rbao.east.entity.Report">
		insert into rb_report
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="reportDate != null">
				report_date,
			</if>
			<if test="registerCount != null">
				register_count,
			</if>
			<if test="vipCount != null">
				vip_count,
			</if>
			<if test="attestationRealnameCount != null">
				attestation_realname_count,
			</if>
			<if test="attestationTelCount != null">
				attestation_tel_count,
			</if>
			<if test="borrowFee != null">
				borrow_fee,
			</if>
			<if test="interestFee != null">
				interest_fee,
			</if>
			<if test="cashFee != null">
				cash_fee,
			</if>
			<if test="vipFee != null">
				vip_fee,
			</if>
			<if test="rechargeFee != null">
				recharge_fee,
			</if>
			<if test="overdueRepayedCount != null">
				overdue_repayed_count,
			</if>
			<if test="overdueRepayedAmount != null">
				overdue_repayed_amount,
			</if>
			<if test="newIncreasedCount != null">
				new_increased_count,
			</if>
			<if test="newIncreasedAmount != null">
				new_increased_amount,
			</if>
			<if test="rechargeOnline != null">
				recharge_online,
			</if>
			<if test="rechargeOffline != null">
				recharge_offline,
			</if>
			<if test="cash != null">
				cash,
			</if>
			<if test="getIn != null">
				get_in,
			</if>
			<if test="interest != null">
				interest,
			</if>
			<if test="tenderReward != null">
				tender_reward,
			</if>
			<if test="rechargeOfflineReward != null">
				recharge_offline_reward,
			</if>
			<if test="continueReward != null">
				continue_reward,
			</if>
			<if test="recommendReward != null">
				recommend_reward,
			</if>
			<if test="registerReward != null">
				register_reward,
			</if>
			<if test="publishCount != null">
				publish_count,
			</if>
			<if test="publishAmount != null">
				publish_amount,
			</if>
			<if test="repayedCount != null">
				repayed_count,
			</if>
			<if test="repayedAmount != null">
				repayed_amount,
			</if>
			<if test="tenderCount != null">
				tender_count,
			</if>
			<if test="tenderAmount != null">
				tender_amount,
			</if>
			<if test="effeTenderCount != null">
				effe_tender_count,
			</if>
			<if test="effeTenderAmount != null">
				effe_tender_amount,
			</if>
			<if test="cashCount != null">
				cash_count,
			</if>
			<if test="rechargeCount != null">
				recharge_count,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="reportDate != null">
				#{reportDate,jdbcType=DATE},
			</if>
			<if test="registerCount != null">
				#{registerCount,jdbcType=INTEGER},
			</if>
			<if test="vipCount != null">
				#{vipCount,jdbcType=INTEGER},
			</if>
			<if test="attestationRealnameCount != null">
				#{attestationRealnameCount,jdbcType=INTEGER},
			</if>
			<if test="attestationTelCount != null">
				#{attestationTelCount,jdbcType=INTEGER},
			</if>
			<if test="borrowFee != null">
				#{borrowFee,jdbcType=DECIMAL},
			</if>
			<if test="interestFee != null">
				#{interestFee,jdbcType=DECIMAL},
			</if>
			<if test="cashFee != null">
				#{cashFee,jdbcType=DECIMAL},
			</if>
			<if test="vipFee != null">
				#{vipFee,jdbcType=DECIMAL},
			</if>
			<if test="rechargeFee != null">
				#{rechargeFee,jdbcType=DECIMAL},
			</if>
			<if test="overdueRepayedCount != null">
				#{overdueRepayedCount,jdbcType=INTEGER},
			</if>
			<if test="overdueRepayedAmount != null">
				#{overdueRepayedAmount,jdbcType=DECIMAL},
			</if>
			<if test="newIncreasedCount != null">
				#{newIncreasedCount,jdbcType=INTEGER},
			</if>
			<if test="newIncreasedAmount != null">
				#{newIncreasedAmount,jdbcType=DECIMAL},
			</if>
			<if test="rechargeOnline != null">
				#{rechargeOnline,jdbcType=DECIMAL},
			</if>
			<if test="rechargeOffline != null">
				#{rechargeOffline,jdbcType=DECIMAL},
			</if>
			<if test="cash != null">
				#{cash,jdbcType=DECIMAL},
			</if>
			<if test="getIn != null">
				#{getIn,jdbcType=DECIMAL},
			</if>
			<if test="interest != null">
				#{interest,jdbcType=DECIMAL},
			</if>
			<if test="tenderReward != null">
				#{tenderReward,jdbcType=DECIMAL},
			</if>
			<if test="rechargeOfflineReward != null">
				#{rechargeOfflineReward,jdbcType=DECIMAL},
			</if>
			<if test="continueReward != null">
				#{continueReward,jdbcType=DECIMAL},
			</if>
			<if test="recommendReward != null">
				#{recommendReward,jdbcType=DECIMAL},
			</if>
			<if test="registerReward != null">
				#{registerReward,jdbcType=DECIMAL},
			</if>
			<if test="publishCount != null">
				#{publishCount,jdbcType=INTEGER},
			</if>
			<if test="publishAmount != null">
				#{publishAmount,jdbcType=DECIMAL},
			</if>
			<if test="repayedCount != null">
				#{repayedCount,jdbcType=INTEGER},
			</if>
			<if test="repayedAmount != null">
				#{repayedAmount,jdbcType=DECIMAL},
			</if>
			<if test="tenderCount != null">
				#{tenderCount,jdbcType=INTEGER},
			</if>
			<if test="tenderAmount != null">
				#{tenderAmount,jdbcType=DECIMAL},
			</if>
			<if test="effeTenderCount != null">
				#{effeTenderCount,jdbcType=INTEGER},
			</if>
			<if test="effeTenderAmount != null">
				#{effeTenderAmount,jdbcType=DECIMAL},
			</if>
			<if test="cashCount != null">
				#{cashCount,jdbcType=INTEGER},
			</if>
			<if test="rechargeCount != null">
				#{rechargeCount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.rbao.east.entity.Report">
		update rb_report
		<set>
			<if test="reportDate != null">
				report_date = #{reportDate,jdbcType=DATE},
			</if>
			<if test="registerCount != null">
				register_count = #{registerCount,jdbcType=INTEGER},
			</if>
			<if test="vipCount != null">
				vip_count = #{vipCount,jdbcType=INTEGER},
			</if>
			<if test="attestationRealnameCount != null">
				attestation_realname_count =
				#{attestationRealnameCount,jdbcType=INTEGER},
			</if>
			<if test="attestationTelCount != null">
				attestation_tel_count =
				#{attestationTelCount,jdbcType=INTEGER},
			</if>
			<if test="borrowFee != null">
				borrow_fee = #{borrowFee,jdbcType=DECIMAL},
			</if>
			<if test="interestFee != null">
				interest_fee = #{interestFee,jdbcType=DECIMAL},
			</if>
			<if test="cashFee != null">
				cash_fee = #{cashFee,jdbcType=DECIMAL},
			</if>
			<if test="vipFee != null">
				vip_fee = #{vipFee,jdbcType=DECIMAL},
			</if>
			<if test="rechargeFee != null">
				recharge_fee = #{rechargeFee,jdbcType=DECIMAL},
			</if>
			<if test="overdueRepayedCount != null">
				overdue_repayed_count =
				#{overdueRepayedCount,jdbcType=INTEGER},
			</if>
			<if test="overdueRepayedAmount != null">
				overdue_repayed_amount =
				#{overdueRepayedAmount,jdbcType=DECIMAL},
			</if>
			<if test="newIncreasedCount != null">
				new_increased_count =
				#{newIncreasedCount,jdbcType=INTEGER},
			</if>
			<if test="newIncreasedAmount != null">
				new_increased_amount =
				#{newIncreasedAmount,jdbcType=DECIMAL},
			</if>
			<if test="rechargeOnline != null">
				recharge_online = #{rechargeOnline,jdbcType=DECIMAL},
			</if>
			<if test="rechargeOffline != null">
				recharge_offline = #{rechargeOffline,jdbcType=DECIMAL},
			</if>
			<if test="cash != null">
				cash = #{cash,jdbcType=DECIMAL},
			</if>
			<if test="getIn != null">
				get_in = #{getIn,jdbcType=DECIMAL},
			</if>
			<if test="interest != null">
				interest = #{interest,jdbcType=DECIMAL},
			</if>
			<if test="tenderReward != null">
				tender_reward = #{tenderReward,jdbcType=DECIMAL},
			</if>
			<if test="rechargeOfflineReward != null">
				recharge_offline_reward =
				#{rechargeOfflineReward,jdbcType=DECIMAL},
			</if>
			<if test="continueReward != null">
				continue_reward = #{continueReward,jdbcType=DECIMAL},
			</if>
			<if test="recommendReward != null">
				recommend_reward = #{recommendReward,jdbcType=DECIMAL},
			</if>
			<if test="registerReward != null">
				register_reward = #{registerReward,jdbcType=DECIMAL},
			</if>
			<if test="publishCount != null">
				publish_count = #{publishCount,jdbcType=INTEGER},
			</if>
			<if test="publishAmount != null">
				publish_amount = #{publishAmount,jdbcType=DECIMAL},
			</if>
			<if test="repayedCount != null">
				repayed_count = #{repayedCount,jdbcType=INTEGER},
			</if>
			<if test="repayedAmount != null">
				repayed_amount = #{repayedAmount,jdbcType=DECIMAL},
			</if>
			<if test="tenderCount != null">
				tender_count = #{tenderCount,jdbcType=INTEGER},
			</if>
			<if test="tenderAmount != null">
				tender_amount = #{tenderAmount,jdbcType=DECIMAL},
			</if>
			<if test="effeTenderCount != null">
				effe_tender_count = #{effeTenderCount,jdbcType=INTEGER},
			</if>
			<if test="effeTenderAmount != null">
				effe_tender_amount =
				#{effeTenderAmount,jdbcType=DECIMAL},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.rbao.east.entity.Report">
		update rb_report
		set report_date = #{reportDate,jdbcType=DATE},
		register_count =
		#{registerCount,jdbcType=INTEGER},
		vip_count =
		#{vipCount,jdbcType=INTEGER},
		attestation_realname_count =
		#{attestationRealnameCount,jdbcType=INTEGER},
		attestation_tel_count =
		#{attestationTelCount,jdbcType=INTEGER},
		borrow_fee =
		#{borrowFee,jdbcType=DECIMAL},
		interest_fee =
		#{interestFee,jdbcType=DECIMAL},
		cash_fee =
		#{cashFee,jdbcType=DECIMAL},
		vip_fee = #{vipFee,jdbcType=DECIMAL},
		recharge_fee = #{rechargeFee,jdbcType=DECIMAL},
		overdue_repayed_count =
		#{overdueRepayedCount,jdbcType=INTEGER},
		overdue_repayed_amount =
		#{overdueRepayedAmount,jdbcType=DECIMAL},
		new_increased_count =
		#{newIncreasedCount,jdbcType=INTEGER},
		new_increased_amount =
		#{newIncreasedAmount,jdbcType=DECIMAL},
		recharge_online =
		#{rechargeOnline,jdbcType=DECIMAL},
		recharge_offline =
		#{rechargeOffline,jdbcType=DECIMAL},
		cash = #{cash,jdbcType=DECIMAL},
		get_in = #{getIn,jdbcType=DECIMAL},
		interest =
		#{interest,jdbcType=DECIMAL},
		tender_reward =
		#{tenderReward,jdbcType=DECIMAL},
		recharge_offline_reward =
		#{rechargeOfflineReward,jdbcType=DECIMAL},
		continue_reward =
		#{continueReward,jdbcType=DECIMAL},
		recommend_reward =
		#{recommendReward,jdbcType=DECIMAL},
		register_reward =
		#{registerReward,jdbcType=DECIMAL},
		publish_count =
		#{publishCount,jdbcType=INTEGER},
		publish_amount =
		#{publishAmount,jdbcType=DECIMAL},
		repayed_count =
		#{repayedCount,jdbcType=INTEGER},
		repayed_amount =
		#{repayedAmount,jdbcType=DECIMAL},
		tender_count =
		#{tenderCount,jdbcType=INTEGER},
		tender_amount =
		#{tenderAmount,jdbcType=DECIMAL},
		effe_tender_count =
		#{effeTenderCount,jdbcType=INTEGER},
		effe_tender_amount =
		#{effeTenderAmount,jdbcType=DECIMAL}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>